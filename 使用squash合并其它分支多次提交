在开发分支上开发时，我们经常会分多次提交代码，为的就是尽可能避免工作被回滚而浪费大量工作去恢复。但当需要将开发分支的代码合并到其它分支时，将导致其它分支也带上了开发分支的多次提交。若其它分支也采用相同的做法（多次提交代码），则将导致N个分支的M次提交记录混杂在一起。当需要翻阅代码、定位问题时，将难以区分某块代码的来源、引入时间、引入原因。

### 正常合并 ###
	git merge origin/feature-*
	git push
此时将把全部提交记录都覆盖到当前分支，导致提交记录繁多混杂，难以做回滚、分析

### squash合并 ###

--squash选项的含义是：本地文件内容与不使用该选项的合并结果相同，但是不提交、不移动HEAD，因此需要一条额外的commit命令。其效果相当于将another分支上的多个commit合并成一个，放在当前分支上，原来的commit历史则没有拿过来。

	git merge --squash origin/feature-*
	git commit -m "***的开发"
	git push
